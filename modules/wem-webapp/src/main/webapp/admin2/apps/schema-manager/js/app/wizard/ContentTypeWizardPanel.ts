module app_wizard {

    export class ContentTypeWizardPanel extends api_app_wizard.WizardPanel {

        private static DEFAULT_CHEMA_ICON_URL:string = '/admin/rest/schema/image/ContentType:system:structured';

        private saveAction:api_ui.Action;

        private closeAction:api_ui.Action;

        private formIcon:api_app_wizard.FormIcon;

        private toolbar:api_ui_toolbar.Toolbar;

        private persistedContentType:api_remote_contenttype.ContentType;

        private contentTypeForm:api_ui.Form;

        constructor(id:string) {
            this.formIcon =
            new api_app_wizard.FormIcon(ContentTypeWizardPanel.DEFAULT_CHEMA_ICON_URL, "Click to upload icon", "rest/upload");

            this.closeAction = new api_app_wizard.CloseAction(this);
            this.saveAction = new api_app_wizard.SaveAction(this);

            this.toolbar = new ContentTypeWizardToolbar({
                saveAction: this.saveAction,
                closeAction: this.closeAction
            });

            super({
                formIcon: this.formIcon,
                toolbar: this.toolbar
            });

            this.setDisplayName("New Content Type");
            this.setName(this.generateName(this.getDisplayName()));
            this.setAutogenerateDisplayName(true);
            this.setAutogenerateName(true);

            this.contentTypeForm = new ContentTypeForm();

            this.addStep(new api_app_wizard.WizardStep("Content Type", this.contentTypeForm));


        }

        setPersistedItem(contentType:api_remote_contenttype.ContentType) {
            super.setPersistedItem(contentType);

            this.setDisplayName(contentType.displayName);
            this.setName(contentType.name);
            this.formIcon.setSrc(contentType.iconUrl);

            this.setAutogenerateDisplayName(!contentType);
            this.setAutogenerateName(!contentType.name || contentType.name == this.generateName(contentType.displayName));

            this.persistedContentType = contentType;
        }

        persistNewItem(successCallback?:() => void) {
            var formData = this.contentTypeForm.getFormData();
            var createParams:api_remote_contenttype.CreateOrUpdateParams = {
                contentType: formData.xml,
                iconReference: this.getIconUrl()
            };

            api_remote.RemoteContentTypeService.contentType_createOrUpdate(createParams,
                (result:api_remote_contenttype.CreateOrUpdateResult) => {
                    if (result.error) {
                        api_notify.newError(result.error).send();
                    } else if (result.success) {
                        new app_wizard.ContentTypeCreatedEvent().fire();
                        api_notify.showFeedback('Content type was created!');
                    }
                });
        }

        updatePersistedItem(successCallback?:() => void) {
            var formData = this.contentTypeForm.getFormData();
            var updateParams:api_remote_contenttype.CreateOrUpdateParams = {
                contentType: formData.xml,
                iconReference: this.getIconUrl()
            };

            api_remote.RemoteContentTypeService.contentType_createOrUpdate(updateParams,
                (result:api_remote_contenttype.CreateOrUpdateResult) => {
                    if (result.error) {
                        api_notify.newError(result.error).send();
                    } else if (result.success) {
                        new app_wizard.ContentTypeUpdatedEvent().fire();
                        api_notify.showFeedback('Content type was saved!');
                    }
                });
        }
    }
}