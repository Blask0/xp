include 'core-api'
include 'core-event'
include 'core-schema'
include 'core-repo'
include 'core-security'
include 'core-image'
include 'core-export'
include 'core-mail'
include 'core-impl'
include 'core-itest'

include 'script:script-api'
include 'script:script-impl'

include 'web:web-api'
include 'web:web-impl'
include 'web:web-jaxrs'
include 'web:web-vhost'

include 'portal:portal-api'
include 'portal:portal-impl'

include 'admin-api'
include 'admin-impl'
include 'admin-event'
include 'admin-ui'

include 'upgrade'
include 'toolbox'

include 'launcher'
include 'distro'

include 'testing'
include 'gradle-plugin'

include 'lib:lib-content'
include 'lib:lib-i18n'
include 'lib:lib-portal'
include 'lib:lib-mustache'
include 'lib:lib-xslt'
include 'lib:lib-thymeleaf'
include 'lib:lib-mail'
include 'lib:lib-auth'

include 'repack:repack-jparsec'
include 'repack:repack-attoparser'
include 'repack:repack-resteasy'
include 'repack:repack-jhlabs-filters'
include 'repack:repack-elasticsearch'

rootProject.name = 'xp'

configureProjects( rootProject )

def configureProjects( root )
{
    root.children.each { p ->
        configureProject( p )
        configureProjects( p )
    }
}

def configureProject( p )
{
    String dirName = p.path.substring( 1 ).replace( ':', '/' )
    p.projectDir = new File( (File) settingsDir, "modules/${dirName}" )
    assert p.projectDir.isDirectory()
}
